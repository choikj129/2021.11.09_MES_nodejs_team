<!DOCTYPE html>
<html>
<head>
    <%- include("./head.ejs") %>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/4.2.1/echarts.min.js"></script>

    <style>
        .wrapper1{
            width:42vw;
            height:45vh;                
            background-image: linear-gradient(to right bottom,rgba(159,159,255,1), rgba(98,98,255,0.5), rgba(36,40,0,0.1) );
            /*border:0.1em solid white;*/
        }
        .wrapper2{
            width:3vw;
            height:45vh;
            background-image: linear-gradient(to right bottom,rgba(159,159,255,1), rgba(98,98,255,0.5), rgba(36,40,0,0.1));
            text-align: center;
            color:white;
            line-height:5vw;
            /*border:0.1em solid white;*/
        }
        #current_icon{
            background-color: var(--first-color);
        }
    </style>
</head>
<body style="background-color: rgb(41, 43, 48); overflow-y:hidden">
    <!-- 시간현황 -->
    <div>
        <div class="wrapper1" style="position: absolute; top:4.5vh; left:11vw;">
            <div id="Chart0" style="width:100%; height:100%"></div>  
        </div>
        <div class="wrapper2" style="position: absolute; top:4.5vh; left:7.5vw;">
            <div style="font-size:2.8vh">
                <b>시<br>간<br>현<br>황</b>
            </div>
        </div>
    </div>
    <!-- 속도현황 -->
    <div>
        <div class="wrapper1" style="position: absolute; top:4.5vh; right:0.8vw;">
            <div id="Chart1" style="width:100%; height:100%"></div>
        </div>
        <div class="wrapper2" style="position: absolute; top:4.5vh; right:43.3vw;">
            <div style="font-size:2.8vh">
                <b>속<br>도<br>현<br>황</b>
            </div>
        </div>
    </div>
    <!-- 압력현황 --> 
    <div>
        <div class="wrapper1" style="position: absolute; top:50.5vh; left:11vw;"> 
            <div id="Chart2" style="width:100%; height:100%"></div>
        </div>
        <div class="wrapper2" style="position: absolute; top:50.5vh; left:7.5vw;">
            <div style="font-size:2.8vh">
                <b>압<br>력<br>현<br>황</b>
            </div>
        </div>
    </div>
    <!-- 온도현황 -->
    <div>
        <div class="wrapper1" style="position: absolute; top:50.5vh; right:0.8vw">
            <div id="Chart3" style="width:100%; height:100%"></div>
        </div>
        <div class="wrapper2" style="position: absolute; top:50.5vh; right:43.3vw;">
            <div style="font-size:2.8vh">
                <b>온<br>도<br>현<br>황</b>
            </div>
        </div>
    </div>

    
    <script>
        // 시간 그래프

        // DOM을 준비하고 echart 객체를 만듭니다.
        var myChart0 = echarts.init(document.getElementById('Chart0'));
        //chart의 설정을 정합니다.
        var option0 = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    label: {
                        backgroundColor: '#283b56'
                    }
                }
            },
            legend: {
                data:['사출시간', '보압시간', '배압시간'],
                y:'bottom'
            },
            dataZoom: {
                show: false,
                start: 0,
                end: 100
            },
            xAxis: [
                {
                    type: 'category',
                    boundaryGap: true,
                    data: (function (){
                        var now = new Date();
                        var res = [];
                        var len = 10;
                        while (len--) {
                            res.unshift(now.toLocaleTimeString().replace(/^\D*/,''));
                            now = new Date(now - 2000);
                        }
                        return res;
                    })()
                },
            ],
            yAxis: [
                {
                    type: 'value',
                    scale: true,
                    name: '시간(sec)',
                    max: 25,
                    min: 0,
                    boundaryGap: [0.2, 0.2],
                    axisLabel: {
                        formatter: '{value}'
                    },
                }
            ],
            series: [
                {
                    name: '사출시간',
                    type: 'line',
                    lineStyle:{
                        color:'#2A265C' //line차트 색상 변경
                    },
                    yAxisIndex: 0, //yAxis 1번째 사용
                    data: (function (){
                        var res = [];
                        var len = 0;
                        while (len < 10) {
                            res.push((Math.random() + 1).toFixed(2) - 0); //랜덤 데이터 생성
                            len++;
                        }
                        return res;
                    })()
                },
                {
                    name: '보압시간',
                    type: 'line',
                    lineStyle:{
                        color:'yellow' //line차트 색상 변경
                    },
                    yAxisIndex: 0, //yAxis 1번째 사용
                    data: (function (){
                        var res = [];
                        var len = 0;
                        while (len < 10) {
                            res.push((Math.random() + 1).toFixed(2) - 0); //랜덤 데이터 생성
                            len++;
                        }
                        return res;
                    })()
                },
                {
                    name: '배압시간',
                    type: 'line',
                    lineStyle:{
                        color:'orange' //line차트 색상 변경
                    },
                    yAxisIndex: 0, //yAxis 1번째 사용
                    data: (function (){
                        var res = [];
                        var len = 0;
                        while (len < 10) {
                            res.push((Math.random() + 1).toFixed(2) - 0); //랜덤 데이터 생성
                            len++;
                        }
                        return res;
                    })()
                }
            ]
        };

        // 위에서 설정한 속성을 차트에 반영합니다.
        myChart0.setOption(option0);

        //데이터를 생성하고 삭제합니다.
        setInterval(function (){
            //x축에 실시간 데이터 생성
            var axisData = (new Date()).toLocaleTimeString().replace(/^\D*/, '');

            var data0 = option0.series[0].data; //순수익 데이터
            var data1 = option0.series[1].data;
            var data2 = option0.series[2].data;

            //데이터의 가장 왼쪽 값을 제거
            data0.shift();
            data1.shift();
            data2.shift();

            //데이터의 가장 오른쪽 값을 추가
            data0.push(Math.round(Math.random() * 100));
            data1.push(Math.round(Math.random() * 100));
            data2.push(Math.round(Math.random() * 100));

            //x축에 시간 데이터 추가
            option0.xAxis[0].data.shift();
            option0.xAxis[0].data.push(axisData);

            //차트에 반영
            myChart0.setOption(option0);
        }, 2100);


        //속도 그래프

        // DOM을 준비하고 echart 객체를 만듭니다.
        var myChart1 = echarts.init(document.getElementById('Chart1'));

        //chart의 설정을 정합니다.
        var option1 = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    label: {
                        backgroundColor: '#283b56'
                    }
                }
            },
            legend: {
                data:['사출속도'],
                y:'bottom'
            },
            dataZoom: {
                show: false,
                start: 0,
                end: 100
            },
            xAxis: [
                {
                    type: 'category',
                    boundaryGap: true,
                    data: (function (){
                        var now = new Date();
                        var res = [];
                        var len = 20;
                        while (len--) {
                            res.unshift(now.toLocaleTimeString().replace(/^\D*/,''));
                            now = new Date(now - 2000);
                        }
                        return res;
                    })()
                },
            ],
            yAxis: [
                {
                    type: 'value',
                    scale: true,
                    name: '속도(mm/s)',
                    max: 70,
                    min: 0,
                    boundaryGap: [0.2, 0.2],
                    axisLabel: {
                        formatter: '{value}'
                    },
                }
            ],
            series: [
                {
                    name: '사출속도',
                    type: 'line',
                    lineStyle:{
                        color:'#2A265C' //line차트 색상 변경
                    },
                    yAxisIndex: 0, //yAxis 1번째 사용
                    data: (function (){
                        var res = [];
                        var len = 0;
                        while (len < 20) {
                            res.push((Math.random()*2 + 1).toFixed(1) - 0); //랜덤 데이터 생성
                            len++;
                        }
                        return res;
                    })()
                }
            ]
        };

        // 위에서 설정한 속성을 차트에 반영합니다.
        myChart1.setOption(option1);

        //데이터를 생성하고 삭제합니다.
        setInterval(function (){
            //x축에 실시간 데이터 생성
            var axisData = (new Date()).toLocaleTimeString().replace(/^\D*/, '');

            var data0 = option1.series[0].data; //순수익 데이터

            //데이터의 가장 왼쪽 값을 제거
            data0.shift();

            //데이터의 가장 오른쪽 값을 추가
            data0.push(Math.round(Math.random() * 100));

            //x축에 시간 데이터 추가
            option1.xAxis[0].data.shift();
            option1.xAxis[0].data.push(axisData);

            //차트에 반영
            myChart1.setOption(option1);
        }, 2100);
        

        // 압력 그래프

        // DOM을 준비하고 echart 객체를 만듭니다.
        var myChart2 = echarts.init(document.getElementById('Chart2'));

        //chart의 설정을 정합니다.
        var option2 = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    label: {
                        backgroundColor: '#283b56'
                    }
                }
            },
            legend: {
                data:['보압'],
                y:'bottom'
            },
            dataZoom: {
                show: false,
                start: 0,
                end: 100
            },
            xAxis: [
                {
                    type: 'category',
                    boundaryGap: true,
                    data: (function (){
                        var now = new Date();
                        var res = [];
                        var len = 20;
                        while (len--) {
                            res.unshift(now.toLocaleTimeString().replace(/^\D*/,''));
                            now = new Date(now - 2000);
                        }
                        return res;
                    })()
                },
            ],
            yAxis: [
                {
                    type: 'value',
                    scale: true,
                    name: '압력(kgf/cm^3)',
                    max: 150,
                    min: 0,
                    boundaryGap: [0.2, 0.2],
                    axisLabel: {
                        formatter: '{value}'
                    },
                }
            ],
            series: [
                {
                    name: '보압',
                    type: 'line',
                    lineStyle:{
                        color:'#2A265C' //line차트 색상 변경
                    },
                    yAxisIndex: 0, //yAxis 1번째 사용
                    data: (function (){
                        var res = [];
                        var len = 0;
                        while (len < 20) {
                            res.push((Math.random()*2 + 1).toFixed(1) - 0); //랜덤 데이터 생성
                            len++;
                        }
                        return res;
                    })()
                }
            ]
        };

        // 위에서 설정한 속성을 차트에 반영합니다.
        myChart2.setOption(option2);

        //데이터를 생성하고 삭제합니다.
        setInterval(function (){
            //x축에 실시간 데이터 생성
            var axisData = (new Date()).toLocaleTimeString().replace(/^\D*/, '');

            var data0 = option2.series[0].data; //순수익 데이터

            //데이터의 가장 왼쪽 값을 제거
            data0.shift();

            //데이터의 가장 오른쪽 값을 추가
            data0.push(Math.round(Math.random() * 100));

            //x축에 시간 데이터 추가
            option2.xAxis[0].data.shift();
            option2.xAxis[0].data.push(axisData);

            //차트에 반영
            myChart2.setOption(option2);
        }, 2100);


        //온도 그래프

        // DOM을 준비하고 echart 객체를 만듭니다.
        var myChart3 = echarts.init(document.getElementById('Chart3'));

        //chart의 설정을 정합니다.
        var option3 = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    label: {
                        backgroundColor: '#283b56'
                    }
                }
            },
            legend: {
                data:['금형온도', '용융온도'],
                y:'bottom'
            },
            dataZoom: {
                show: false,
                start: 0,
                end: 100
            },
            xAxis: [
                {
                    type: 'category',
                    boundaryGap: true,
                    data: (function (){
                        var now = new Date();
                        var res = [];
                        var len = 20;
                        while (len--) {
                            res.unshift(now.toLocaleTimeString().replace(/^\D*/,''));
                            now = new Date(now - 2000);
                        }
                        return res;
                    })()
                },
            ],
            yAxis: [
                {
                    type: 'value',
                    scale: true,
                    name: '금형온도(℃)',
                    max: 50,
                    min: 0,
                    boundaryGap: [0.2, 0.2],
                    axisLabel: {
                        formatter: '{value}'
                    },
                },
                {
                    type: 'value',
                    scale: true,
                    name: '용융온도(℃)',
                    max: 300,
                    min: 50,
                    boundaryGap: [0.2, 0.2],
                    axisLabel: {
                        formatter: '{value}'
                    },
                }
            ],
            series: [
                {
                    name: '금형온도',
                    type: 'line',
                    lineStyle:{
                        color:'#2A265C' //line차트 색상 변경
                    },
                    yAxisIndex: 0, //yAxis 1번째 사용
                    data: (function (){
                        var res = [];
                        var len = 0;
                        while (len < 20) {
                            res.push((Math.random()*2 + 1).toFixed(1) - 0); //랜덤 데이터 생성
                            len++;
                        }
                        return res;
                    })()
                },
                {
                    name: '용융온도',
                    type: 'line',
                    lineStyle:{
                        color:'yellow' //line차트 색상 변경
                    },
                    yAxisIndex: 1, //yAxis 1번째 사용
                    data: (function (){
                        var res = [];
                        var len = 0;
                        while (len < 20) {
                            res.push((Math.random()*2 + 1).toFixed(1) - 0); //랜덤 데이터 생성
                            len++;
                        }
                        return res;
                    })()
                }
            ]
        };

        // 위에서 설정한 속성을 차트에 반영합니다.
        myChart3.setOption(option3);

        //데이터를 생성하고 삭제합니다.
        setInterval(function (){
            //x축에 실시간 데이터 생성
            var axisData = (new Date()).toLocaleTimeString().replace(/^\D*/, '');

            var data0 = option3.series[0].data; //순수익 데이터
            var data1 = option3.series[1].data;

            //데이터의 가장 왼쪽 값을 제거
            data0.shift();
            data1.shift();

            //데이터의 가장 오른쪽 값을 추가
            data0.push(Math.round(Math.random() * 100));
            data1.push(Math.round(Math.random() * 100));

            //x축에 시간 데이터 추가
            option3.xAxis[0].data.shift();
            option3.xAxis[0].data.push(axisData);

            //차트에 반영
            myChart3.setOption(option3);
        }, 2100);

    </script>

</body>
</html>